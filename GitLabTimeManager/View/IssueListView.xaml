<UserControl x:Class="GitLabTimeManager.View.IssueListView"
             x:Name="Root"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:GitLabTimeManager.ViewModel"
             xmlns:services="clr-namespace:GitLabTimeManager.Services"
             xmlns:view="clr-namespace:GitLabTimeManager.View"
             xmlns:catel="http://schemas.catelproject.com"
             xmlns:converters="clr-namespace:GitLabTimeManager.Converters"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" 
             d:DataContext="{d:DesignInstance viewModel:IssueListViewModel}">
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type viewModel:IssueTimerViewModel}">
            <view:IssueTimerView/>
        </DataTemplate>
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="IssueItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="Transparent">
                            <ContentPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid Background="#AACCCCCC">
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid Background="{StaticResource GrayBrush9}">
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="IssueTemplate" DataType="{x:Type services:WrappedIssue}">
           <Border BorderThickness="0 0 0 1"
                   BorderBrush="#99CCCCCC"
                   Cursor="Hand">
               <Border.Style>
                   <Style TargetType="{x:Type Border}">
                       <Setter Property="Background" Value="#44CCCCCC"/>
                       <Style.Triggers>
                           <DataTrigger Binding="{Binding Finished, Mode=OneWay}" Value="{x:Null}">
                               <Setter Property="Background" Value="Transparent"/>
                           </DataTrigger>
                       </Style.Triggers>
                   </Style>
               </Border.Style>
               <Grid Margin="0 4 0 4">
                   <Grid.RowDefinitions>
                       <RowDefinition Height="Auto" SharedSizeGroup="IssueHeight" MinHeight="50"/>
                   </Grid.RowDefinitions>
                   <Grid.ColumnDefinitions>
                       <ColumnDefinition Width="Auto" SharedSizeGroup="Issue"/>
                       <ColumnDefinition Width="Auto" SharedSizeGroup="Progress" MaxWidth="50"/>
                       <ColumnDefinition Width="*" />
                   </Grid.ColumnDefinitions>
                   

                   <TextBlock Grid.Column="0" Margin="4 0 8 0"
                               VerticalAlignment="Center">
                        <Hyperlink NavigateUri="{Binding Issue.WebUrl, Mode=OneWay}" TargetName="_top" RequestNavigate="Hyperlink_OnRequestNavigate">
                            <TextBlock Text="{Binding Issue.Iid, Mode=OneWay}"/>
                        </Hyperlink>
                    </TextBlock>

                    <mah:MetroProgressBar Grid.Column="1"
                                          Background="LightGray"
                                          Foreground="{StaticResource AccentColorBrush}"
                                          Opacity="0.8" 
                                          Maximum="{Binding Issue.TimeStats.TimeEstimate, Mode=OneWay}"
                                          Value="{Binding Issue.TimeStats.TotalTimeSpent, Mode=OneWay}"
                                          Height="2" 
                                          VerticalAlignment="Bottom">
                        <mah:MetroProgressBar.Style>
                            <Style TargetType="{x:Type mah:MetroProgressBar}" BasedOn="{StaticResource {x:Type mah:MetroProgressBar}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Issue.TimeStats.TotalTimeSpent, Mode=OneWay}" Value="{x:Null}">
                                        <Setter Property="Foreground" Value="#666"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Issue.TimeStats.TimeEstimate, Mode=OneWay}" Value="{x:Null}">
                                        <Setter Property="Foreground" Value="#666"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </mah:MetroProgressBar.Style>
                    </mah:MetroProgressBar>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" 
                                HorizontalAlignment="Center" Margin="4 0 0 0">
                        <TextBlock Text="{Binding Spend, Mode=OneWay, StringFormat={}{0:F0}}"
                                   FontWeight="Black" Margin="0 0 4 0"
                                   Style="{StaticResource TextBlockStyle}"/>
                        <TextBlock Text="/" Margin="0 0 4 0"/>
                        <TextBlock Text="{Binding Estimate, Mode=OneWay, StringFormat={}{0:F0}}" Margin="0 0 4 0"
                                   Style="{StaticResource TextBlockStyle}"/>
                    </StackPanel>
                    
                    <TextBlock Grid.Column="2"
                               Text="{Binding Issue.Title, Mode=OneWay}"
                               Style="{StaticResource TextBlockStyle}"
                               IsHyphenationEnabled="True"
                               VerticalAlignment="Center"
                               TextAlignment="Left"
                               TextWrapping="Wrap"
                               Margin="4 0"/>
                
            </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="*"/>
                        <Setter Property="MinWidth" Value="100"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IssueTimerVm.IsFullscreen, Mode=OneWay}" Value="True">
                                <Setter Property="Width" Value="0*"/>
                                <Setter Property="MinWidth" Value="0"/>

                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <ListBox Grid.Column="0"
                 ItemsSource="{Binding WrappedIssues, Mode=OneWay}"
                 ItemTemplate="{StaticResource IssueTemplate}"
                 ItemContainerStyle="{StaticResource IssueItemStyle}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 SelectionMode="Single"
                 SelectedItem="{Binding SelectedIssue, Mode=TwoWay}"
                 IsEnabled="{Binding IssueTimerVm.IsStarted, Mode=OneWay, Converter={catel:BooleanToOppositeBooleanConverter}}"
                 Grid.IsSharedSizeScope="True">
        </ListBox>

        <ContentControl Grid.Column="1" Content="{Binding IssueTimerVm, Mode=OneWay}"/>

        <TextBlock Grid.Column="1" 
                   VerticalAlignment="Center" HorizontalAlignment="Center"
                   Style="{StaticResource TextBlockStyle}"
                   Foreground="{StaticResource GrayBrush3}"
                   FontSize="14"
                   Text="Выберите задачу"
                   Visibility="{Binding SelectedIssue, Mode=OneWay, Converter={x:Static converters:Converter.VisibleIfNull}}"/>
    </Grid>
</UserControl>
