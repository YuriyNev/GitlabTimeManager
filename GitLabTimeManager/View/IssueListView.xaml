<UserControl x:Class="GitLabTimeManager.View.IssueListView"
             x:Name="Root"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:GitLabTimeManager.ViewModel"
             xmlns:services="clr-namespace:GitLabTimeManager.Services"
             xmlns:view="clr-namespace:GitLabTimeManager.View"
             xmlns:catel="http://schemas.catelproject.com"
             xmlns:converters="clr-namespace:GitLabTimeManager.Converters"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:behavior="clr-namespace:GitLabTimeManager.Behavior"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:responses="clr-namespace:GitLabApiClient.Models.Projects.Responses;assembly=GitLabApiClient"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" 
             d:DataContext="{d:DesignInstance viewModel:IssueListViewModel}">
    <UserControl.Resources>
        <ItemsPanelTemplate x:Key="VerticalOrientationTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="{x:Type RowDefinition}">
                                <Setter Property="Height" Value="Auto"/>
                                <Setter Property="MinHeight" Value="270"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IssueTimerVm.IsFullscreen, Mode=OneWay}" Value="True">
                                        <Setter Property="Height" Value="*"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>

                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="{x:Type RowDefinition}">
                                <Setter Property="Height" Value="*"/>
                                <Setter Property="MinHeight" Value="100"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IssueTimerVm.IsFullscreen, Mode=OneWay}" Value="True">
                                        <Setter Property="Height" Value="0*"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>

                </Grid.RowDefinitions>
            </Grid>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="HorizontalOrientationTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition>
                        <ColumnDefinition.Style>
                            <Style TargetType="{x:Type ColumnDefinition}">
                                <Setter Property="Width" Value="*"/>
                                <Setter Property="MaxWidth" Value="900"/>
                                <Setter Property="MinWidth" Value="100"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IssueTimerVm.IsFullscreen, Mode=OneWay}" Value="True">
                                        <Setter Property="Width" Value="0*"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                    <ColumnDefinition>
                        <ColumnDefinition.Style>
                            <Style TargetType="{x:Type ColumnDefinition}">
                                <Setter Property="Width" Value="*"/>
                                <Setter Property="MinWidth" Value="100"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IssueTimerVm.IsFullscreen, Mode=OneWay}" Value="True">
                                        <Setter Property="Width" Value="*"/>
                                        <Setter Property="MaxWidth" Value="Infinity"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                </Grid.ColumnDefinitions>
            </Grid>
        </ItemsPanelTemplate>


        <DataTemplate DataType="{x:Type viewModel:IssueTimerViewModel}">
            <view:IssueTimerView/>
        </DataTemplate>

        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="IssueItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="Transparent">
                            <ContentPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid Background="#AACCCCCC">
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid Background="{StaticResource MahApps.Brushes.Gray9}">
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="LabelItemTemplate" DataType="{x:Type responses:Label}">
            <Grid Margin="2 1"
                  ToolTip="{Binding Name, Mode=OneWay}"
                  ToolTipService.InitialShowDelay="0">
                <Ellipse Width="10" Height="10">
                    <Ellipse.Fill>
                        <SolidColorBrush Color="{Binding Color, Mode=OneWay}"/>
                    </Ellipse.Fill>
                </Ellipse>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="IssueTemplate" DataType="{x:Type services:WrappedIssue}">
           <Border BorderThickness="0 0 0 0"
                   BorderBrush="#99CCCCCC"
                   Margin="0 0 4 0">
               <Border.Style>
                   <Style TargetType="{x:Type Border}">
                       <Setter Property="Opacity" Value="1"/>
                       <Style.Triggers>
                           <DataTrigger Binding="{Binding Issue.State, Mode=OneWay}" Value="Closed">
                               <Setter Property="Opacity" Value="0.5"/>
                           </DataTrigger>
                       </Style.Triggers>
                   </Style>
               </Border.Style>
               <Grid Margin="0 4">

                   <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" SharedSizeGroup="IssueHeight" MinHeight="40" MaxHeight="60"/>
                   </Grid.RowDefinitions>
                   <Grid.ColumnDefinitions>
                       <ColumnDefinition Width="Auto" SharedSizeGroup="Issue"/>
                       <ColumnDefinition Width="Auto" SharedSizeGroup="Progress" MaxWidth="50"/>
                       <ColumnDefinition Width="*" />
                       <ColumnDefinition Width="Auto" SharedSizeGroup="Label"/>
                   </Grid.ColumnDefinitions>

                   <TextBlock Grid.Column="0" Margin="4 0 8 0"
                              VerticalAlignment="Center">
                       <Hyperlink NavigateUri="{Binding Issue.WebUrl, Mode=OneWay}">
                           <b:Interaction.Behaviors>
                               <behavior:HyperLinkBehavior />
                           </b:Interaction.Behaviors>

                           <TextBlock Text="{Binding Issue.Iid, Mode=OneWay}" />
                       </Hyperlink>
                   </TextBlock>

                   <mah:MetroProgressBar Grid.Column="1"
                                         Background="LightGray"
                                         Opacity="0.8"
                                         Maximum="{Binding Issue.TimeStats.TimeEstimate, Mode=OneWay}"
                                         Value="{Binding Issue.TimeStats.TotalTimeSpent, Mode=OneWay}"
                                         Height="2"
                                         Width="30"
                                         VerticalAlignment="Bottom">
                       <mah:MetroProgressBar.Style>
                           <Style TargetType="{x:Type mah:MetroProgressBar}">
                               <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
                               <Style.Triggers>
                                   <DataTrigger Value="True">
                                       <DataTrigger.Binding>
                                           <MultiBinding Converter="{x:Static converters:MultiConverter.TrueIfMoreDouble}">
                                               <Binding Path="Issue.TimeStats.TotalTimeSpent" Mode="OneWay"/>
                                               <Binding Path="Issue.TimeStats.TimeEstimate" Mode="OneWay"/>
                                            </MultiBinding>
                                       </DataTrigger.Binding>
                                       <Setter Property="Foreground" Value="#CC6666" />
                                   </DataTrigger>

                                   <DataTrigger Binding="{Binding Issue.TimeStats.TotalTimeSpent, Mode=OneWay}" Value="0">
                                       <Setter Property="Foreground" Value="#22999999" />
                                   </DataTrigger>
                                   <DataTrigger Binding="{Binding Issue.TimeStats.TimeEstimate, Mode=OneWay}" Value="0">
                                       <Setter Property="Foreground" Value="#22999999" />
                                   </DataTrigger>
                                </Style.Triggers>
                           </Style>
                       </mah:MetroProgressBar.Style>
                   </mah:MetroProgressBar>

                   <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center"
                               HorizontalAlignment="Center" Margin="4 0 0 0">
                       <TextBlock Text="{Binding Spend, Mode=OneWay, StringFormat={}{0:F0}}"
                                  FontWeight="Black" Margin="0 0 4 0"
                                  Style="{StaticResource TextBlockStyle}" />
                       <TextBlock Text="/" Margin="0 0 4 0" />
                       <TextBlock Text="{Binding Estimate, Mode=OneWay, StringFormat={}{0:F0}}" Margin="0 0 4 0"
                                  Style="{StaticResource TextBlockStyle}" />
                   </StackPanel>

                   <Grid Grid.Column="2">
                       <Grid.RowDefinitions>
                           <RowDefinition Height="35"/>
                           <RowDefinition Height="Auto"/>
                       </Grid.RowDefinitions>
                       <TextBlock Grid.Row="0"
                                  Text="{Binding Issue.Title, Mode=OneWay}"
                                  Style="{StaticResource TextBlockStyle}"
                                  IsHyphenationEnabled="True"
                                  VerticalAlignment="Top"
                                  TextAlignment="Left"
                                  TextWrapping="Wrap"
                                  Margin="4 0" />

                       <ItemsControl Grid.Row="1"
                                     ItemsSource="{Binding Labels, Mode=OneWay}"
                                     ItemTemplate="{StaticResource LabelItemTemplate}"
                                     VerticalAlignment="Bottom"
                                     HorizontalAlignment="Right">
                           <ItemsControl.ItemsPanel>
                               <ItemsPanelTemplate>
                                   <WrapPanel/>
                               </ItemsPanelTemplate>
                           </ItemsControl.ItemsPanel>
                       </ItemsControl>
                    </Grid>
               </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <ItemsControl>
            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}">
                    <Setter Property="ItemsPanel" Value="{StaticResource VerticalOrientationTemplate}"/>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}, Converter={x:Static converters:Converter.TrueIfMoreDouble}, ConverterParameter=500, Mode=OneWay}" Value="True">
                            <Setter Property="ItemsPanel" Value="{StaticResource HorizontalOrientationTemplate}" />
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>

            <ContentControl Grid.Row="0" Grid.Column="1" 
                            Content="{Binding IssueTimerVm, Mode=OneWay}"
                            Margin="4"/>

            <ListBox Grid.Row="1" Grid.Column="0"
                     ItemsSource="{Binding IssueCollectionView, Mode=OneWay}"
                     ItemTemplate="{StaticResource IssueTemplate}"
                     ItemContainerStyle="{StaticResource IssueItemStyle}"
                     IsSynchronizedWithCurrentItem="False"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     SnapsToDevicePixels="True"
                     ScrollViewer.CanContentScroll="True"
                     ScrollViewer.IsDeferredScrollingEnabled="False"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"

                     VirtualizingPanel.IsVirtualizing="True"
                     VirtualizingPanel.VirtualizationMode="Recycling"
                     VirtualizingPanel.CacheLengthUnit="Page"
                     VirtualizingPanel.CacheLength="1 1"
                     VirtualizingPanel.ScrollUnit="Pixel"
                     SelectionMode="Single"
                     SelectedItem="{Binding SelectedIssue, Mode=TwoWay}"
                     IsEnabled="{Binding IssueTimerVm.IsStarted, Mode=OneWay, Converter={catel:BooleanToOppositeBooleanConverter}}"
                     Grid.IsSharedSizeScope="True" />
        </ItemsControl>
    </Grid>
</UserControl>
